// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TBADatalyticsSolutions.Data;

#nullable disable

namespace TBADatalyticsSolutions.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250513132911_UpdateUserAccountModel")]
    partial class UpdateUserAccountModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TBADatalyticsSolutions.Models.ContactMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateSent")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ContactMessages");
                });

            modelBuilder.Entity("TBADatalyticsSolutions.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IconClass")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Professional research support using qualitative and quantitative data techniques.",
                            IconClass = "icons/research.png",
                            Title = "Research Analysis"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Transform your business data into actionable insights and performance metrics.",
                            IconClass = "icons/bi.png",
                            Title = "Business Intelligence"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Expert analytics advisory services for smarter decision-making.",
                            IconClass = "icons/consulting.png",
                            Title = "Data Analytics Consulting"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Hands-on training in Excel, SPSS, R, Python, and MySQL for aspiring analysts.",
                            IconClass = "icons/training.png",
                            Title = "Data Analytics Training"
                        });
                });

            modelBuilder.Entity("TBADatalyticsSolutions.Models.Testimonial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Testimonials");
                });

            modelBuilder.Entity("TBADatalyticsSolutions.Models.TrainingCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CourseTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DurationWeeks")
                        .HasColumnType("int");

                    b.Property<string>("Instructor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("TrainingCourses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseTitle = "Introduction to Data Analytics",
                            Description = "Learn the basics of analyzing data using modern tools.",
                            DurationWeeks = 4,
                            Instructor = "Tahir Bastu Abiodun",
                            Level = "Beginner",
                            Price = 150.00m,
                            StartDate = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CourseTitle = "Power BI for Business Intelligence",
                            Description = "Develop interactive dashboards and visual reports with Power BI.",
                            DurationWeeks = 5,
                            Instructor = "Adeola Martins",
                            Level = "Intermediate",
                            Price = 250.00m,
                            StartDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CourseTitle = "Python for Data Science",
                            Description = "Harness the power of Python for data analysis and machine learning.",
                            DurationWeeks = 6,
                            Instructor = "Bolu Adeyemi",
                            Level = "Intermediate",
                            Price = 300.00m,
                            StartDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CourseTitle = "Advanced Machine Learning with Scikit-Learn",
                            Description = "Train and evaluate machine learning models with real-world datasets.",
                            DurationWeeks = 8,
                            Instructor = "Kemi Yusuf",
                            Level = "Advanced",
                            Price = 400.00m,
                            StartDate = new DateTime(2025, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TBADatalyticsSolutions.Models.UserAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConfirmPasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ConfirmationToken")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateRegistered")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("UserAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
